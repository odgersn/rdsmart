// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// order_cpp
IntegerVector order_cpp(SEXP x, bool decreasing);
RcppExport SEXP _rdsmart_order_cpp(SEXP xSEXP, SEXP decreasingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< bool >::type decreasing(decreasingSEXP);
    rcpp_result_gen = Rcpp::wrap(order_cpp(x, decreasing));
    return rcpp_result_gen;
END_RCPP
}
// sort_cpp
NumericVector sort_cpp(NumericVector x, bool decreasing, bool nalast);
RcppExport SEXP _rdsmart_sort_cpp(SEXP xSEXP, SEXP decreasingSEXP, SEXP nalastSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< bool >::type decreasing(decreasingSEXP);
    Rcpp::traits::input_parameter< bool >::type nalast(nalastSEXP);
    rcpp_result_gen = Rcpp::wrap(sort_cpp(x, decreasing, nalast));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rdsmart_order_cpp", (DL_FUNC) &_rdsmart_order_cpp, 2},
    {"_rdsmart_sort_cpp", (DL_FUNC) &_rdsmart_sort_cpp, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_rdsmart(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
